package com.leeves.h.greendao.gen;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.leeves.h.GnakM.model.entity.FengMian;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "FENG_MIAN".
*/
public class FengMianDao extends AbstractDao<FengMian, String> {

    public static final String TABLENAME = "FENG_MIAN";

    /**
     * Properties of entity FengMian.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Date = new Property(0, String.class, "date", true, "DATE");
        public final static Property MeiZhiImgUrl = new Property(1, String.class, "meiZhiImgUrl", false, "MEI_ZHI_IMG_URL");
        public final static Property Title = new Property(2, String.class, "title", false, "TITLE");
    }


    public FengMianDao(DaoConfig config) {
        super(config);
    }
    
    public FengMianDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"FENG_MIAN\" (" + //
                "\"DATE\" TEXT PRIMARY KEY NOT NULL ," + // 0: date
                "\"MEI_ZHI_IMG_URL\" TEXT," + // 1: meiZhiImgUrl
                "\"TITLE\" TEXT);"); // 2: title
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"FENG_MIAN\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, FengMian entity) {
        stmt.clearBindings();
 
        String date = entity.getDate();
        if (date != null) {
            stmt.bindString(1, date);
        }
 
        String meiZhiImgUrl = entity.getMeiZhiImgUrl();
        if (meiZhiImgUrl != null) {
            stmt.bindString(2, meiZhiImgUrl);
        }
 
        String title = entity.getTitle();
        if (title != null) {
            stmt.bindString(3, title);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, FengMian entity) {
        stmt.clearBindings();
 
        String date = entity.getDate();
        if (date != null) {
            stmt.bindString(1, date);
        }
 
        String meiZhiImgUrl = entity.getMeiZhiImgUrl();
        if (meiZhiImgUrl != null) {
            stmt.bindString(2, meiZhiImgUrl);
        }
 
        String title = entity.getTitle();
        if (title != null) {
            stmt.bindString(3, title);
        }
    }

    @Override
    public String readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0);
    }    

    @Override
    public FengMian readEntity(Cursor cursor, int offset) {
        FengMian entity = new FengMian( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // date
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // meiZhiImgUrl
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2) // title
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, FengMian entity, int offset) {
        entity.setDate(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setMeiZhiImgUrl(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setTitle(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
     }
    
    @Override
    protected final String updateKeyAfterInsert(FengMian entity, long rowId) {
        return entity.getDate();
    }
    
    @Override
    public String getKey(FengMian entity) {
        if(entity != null) {
            return entity.getDate();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(FengMian entity) {
        return entity.getDate() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
